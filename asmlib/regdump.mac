%macro reg 0-1
%if DEBUG
	%if %0 == 1
		pusha
		pushf
		printstr %1
		popf
		popa
	%else
	%endif
	call regdump
%endif
%endmacro

%defalias dbg_regdump reg

; input register as param %1 (except eax, ecx)
; output as string to edi
; output:
; ecx: 0
; eax: last hex ascii char
; input: same 
%macro tohexf 1

	doloop 8		;do{  8 hex digits
		rol	%1, 4		; rotate high nibble to the bottom

		mov	eax, %1 
		and	al, 0x0f	; isolate low nibble
		add	al, "k"
		stosb			; *edi++ = al
		;reg
	endloop		;}while(--ecx)
	
	;reg
	rset	eax, -1
%endmacro

%macro tohex 1

	doloop 8		;do{  8 hex digits
		rol	%1, 4		; rotate high nibble to the bottom

		mov	eax, %1 
		and	al, 0x0f	; isolate low nibble
		cmp	al, 10		; set CF according to digit>9
		sbb	al, 0x69	; read CF, set CF and conditionally set AF, and wrap AL to > 99h
		das			; magic, which happens to work
		stosb			; *edi++ = al
		;reg
	endloop		;}while(--ecx)
	
	;reg
	rset	eax, -1
%endmacro

%macro tohex3 1

	doloop 8		;do{  8 hex digits
		rol	%1, 4		; rotate high nibble to the bottom

		mov	eax, %1 
		and	al, 0x0f	; isolate low nibble
		cmp	al, 10		; set CF according to digit>9
		sbb	al, 0x69	; read CF, set CF and conditionally set AF, and wrap AL to > 99h
		das			; magic, which happens to work
		stosb			; *edi++ = al
		;reg
	endloop		;}while(--ecx)
	
	;reg
	rset	eax, -1
%endmacro

%macro tohex2 1

	doloop 8		;do{  8 hex digits
		rol	%1, 4		; rotate high nibble to the bottom

		mov	eax, %1 
		and	al, 0x0f	; isolate low nibble
		cmp	al, 10		; set CF according to digit>9
		sbb	al, 0x69	; read CF, set CF and conditionally set AF, and wrap AL to > 99h
		das			; magic, which happens to work
		mov	[edi], al	; *edi++ = al
		inc	edi
	endloop		;}while(--ecx)

	rset	eax, -1
%endmacro

%macro tohex 2

	set	%2, 8
	%%loop:
		rol	%1, 4		; rotate high nibble to the bottom

		mov	eax, %1 
		and	al, 0x0f	; isolate low nibble
		cmp	al, 10		; set CF according to digit>9
		sbb	al, 0x69	; read CF, set CF and conditionally set AF, and wrap AL to > 99h
		das			; magic, which happens to work
		stosb			; *edi++ = al
		dec	%2
		;reg
	jnz %%loop

	;reg
	rset	eax, -1
	rset	%2, 0
%endmacro


